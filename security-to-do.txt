SECURITY CHECKLIST (перед продом и в проде)

1) Базовая инфраструктура и HTTPS
- [ ] Включить HTTPS везде, редирект HTTP -> HTTPS (301)
- [ ] Сертификат валидный/не истёк, авто-продление настроено
- [ ] HSTS включён (Strict-Transport-Security: max-age=31536000; includeSubDomains)
- [ ] Внутренние панели доступны по отдельному поддомену/пути и ограничены по IP/VPN (по возможности)

2) Секреты и конфиги
- [ ] .env вне веб-корня или закрыт веб-сервером (deny all)
- [ ] Переменные окружения вместо жёстко прописанных секретов в коде
- [ ] Разные секреты для DEV/TEST/PROD; ротация по расписанию
- [ ] Права на файлы .env/ключи: минимально необходимые (600/640)

3) PHP/Runtime
- [ ] display_errors = Off в проде, error_log включён на файл/агрегатор
- [ ] expose_php = Off
- [ ] upload_max_filesize / post_max_size / max_execution_time ограничены под задачу
- [ ] disable_functions (exec, shell_exec и т.п.) при необходимости

4) HTTP‑заголовки безопасности
- [ ] Content-Security-Policy (CSP):
      default-src 'self'; img-src 'self' data: https:; script-src 'self' https://cdn.ckeditor.com; style-src 'self' 'unsafe-inline'; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'
- [ ] X-Frame-Options: DENY (или через CSP frame-ancestors)
- [ ] X-Content-Type-Options: nosniff
- [ ] Referrer-Policy: no-referrer-when-downgrade (или stricter: strict-origin-when-cross-origin)
- [ ] Permissions-Policy: ограничить доступ к камере/микрофону/гео и т.д.
- [ ] Cross-Origin-Opener-Policy / Cross-Origin-Embedder-Policy при необходимости

5) Cookies и сессии
- [ ] session.cookie_secure = On (только по HTTPS)
- [ ] session.cookie_httponly = On
- [ ] session.cookie_samesite = Lax/Strict (учесть внутриадминские POST/редиректы)
- [ ] Корректный cookie_path, если приложение в подпапке
- [ ] Регулярный logout/истечение сессий, защита от фиксации сессий (session_regenerate_id после логина)

6) Аутентификация и авторизация
- [ ] Сильные пароли/менеджер секретов/2FA (если возможно)
- [ ] Заморозка/замедление при множественных неудачных логинах (rate limit, CAPTCHA)
- [ ] Роли/права на действия в админке; защита чувствительных эндпоинтов
- [ ] Логи по входам/сбросам паролей/подозрительной активности

7) CSRF и state‑changing запросы
- [ ] CSRF‑токены для всех POST/PUT/PATCH/DELETE форм/запросов
- [ ] Проверка Origin/Referer для чувствительных операций
- [ ] Идемпотентность/подтверждение для опасных действий (удаления и т.д.)

8) Валидация ввода и вывод (XSS/SQLi)
- [ ] Серверная валидация всех входных данных (тип, длина, формат)
- [ ] Экранирование HTML при выводе пользовательских данных
- [ ] Подготовленные выражения/ORM для SQL, запрет string concatenation
- [ ] Лимиты на размеры полей/количество элементов в массивах

9) Загрузки файлов
- [ ] Проверка MIME/расширения/подписи файлов
- [ ] Хранение загруженных файлов вне веб‑корня либо с принудительной отдачей через скрипт
- [ ] Случайные имена/папки, отсутствие выполнения (noexec) в каталоге загрузок
- [ ] Ограничение размера и типа изображений (re-encode/strip metadata)

10) Логи, мониторинг, алерты
- [ ] Централизация логов (request, auth, ошибки, бизнес‑события)
- [ ] Метрики/health‑checks/аптайм‑мониторинг
- [ ] Алерты по 5xx/пикам ошибок/аномалиям
- [ ] Корреляция запросов (request id) и маскирование персональных данных в логах

11) Ограничение трафика и защита от брутфорса/DDoS
- [ ] Rate limiting/бэк‑офф на чувствительных маршрутах (логин, API)
- [ ] WAF/Fail2Ban/рейт‑лимитер на уровне веб‑сервера/балансера
- [ ] CAPTCHА/доп. защита на критических формах

12) Бэкапы и восстановление
- [ ] Регулярные бэкапы БД и загрузок; проверка восстановления
- [ ] Шифрование бэкапов в покое/в транзите
- [ ] Раздельное хранение ключей расшифровки

13) Зависимости и поставки
- [ ] Актуальные версии PHP/расширений/библиотек; патчи безопасности
- [ ] Блокировка версий (lock‑файлы), контроль целостности
- [ ] Удаление неиспользуемых пакетов/плагинов

14) База данных
- [ ] Учётные данные с минимальными правами (принцип наименьших привилегий)
- [ ] Ограничение сетевого доступа к БД (VPC/Firewall)
- [ ] Шифрование на уровне диска/таблиц при необходимости
- [ ] Индексы и лимиты на тяжёлые запросы

15) Ошибки и страницы
- [ ] Пользовательские страницы 4xx/5xx без раскрытия стеков/пути/SQL
- [ ] Глобальный обработчик ошибок/исключений, трассировки только в логи

16) Админка и инструменты
- [ ] Доступ ограничен (IP allowlist/VPN/Basic Auth поверх своей аутентификации)
- [ ] Скрыть URL админки или вынести на отдельный поддомен
- [ ] Отдельные ключи/сессии для админки

17) Раздача статики и роутинг
- [ ] Веб‑сервер раздаёт статику напрямую; правильные cache headers (immutable + versioning)
- [ ] PHP обрабатывает только нужные маршруты, исключения для статических путей
- [ ] Запрет индексации служебных директорий, список DirectoryIndex

18) CORS и внешние интеграции
- [ ] CORS только для доверенных источников, методы и заголовки минимально нужные
- [ ] Тайм‑ауты и ретраи, устойчивость к сбоям внешних API

19) Сканирование и тестирование
- [ ] Регулярные SAST/DAST/scan конфигураций (CIS Benchmarks)
- [ ] Security review перед релизами, чек‑листы PR/релизов

20) Документация и доступы
- [ ] Onboarding/Offboarding (удаление лишних доступов)
- [ ] Список админов, ключей, контактов для инцидентов
- [ ] Политики паролей, инцидент‑респонс план

Примечания для текущего проекта:
- [ ] Перевести отдачу статики с PHP‑префикса /__assets__ на прямую раздачу веб‑сервером (Nginx/Apache) с кешированием
- [ ] Убедиться, что cookie_path для сессии совпадает с base path (если деплой в подпапке)
- [ ] Добавить/актуализировать CSP с учётом CKEditor CDN
- [ ] Закрыть доступ к .env и служебным файлам на уровне веб‑сервера
- [ ] Включить regenerate session id после логина администратора
- [ ] Добавить rate limit на /crud.php?action=login и другие чувствительные эндпоинты
- [ ] Ввести CSRF‑защиту для всех state‑changing действий в админке
- [ ] Настроить централизованные логи и алерты по 5xx/401/403 пикам
- [ ] Проверить права на каталог загрузок и валидацию изображений/расширений
- [ ] Создать аккаунт аварийного доступа и процедуру его использования
